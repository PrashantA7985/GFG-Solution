    vector<long long> small(long long arr[], int n){
        stack<long long>st;
        vector<long long>v;
        for(int i=0;i<n;i++){
            while(!st.empty() && arr[st.top()]>=arr[i]){st.pop();}
            if(st.empty()){
              v.push_back(-1);
                
            }
            else v.push_back(st.top());
            st.push(i);
            
        }
        return v;
    }
    vector<long long> great(long long arr[], int n){
        stack<long long>st;
        vector<long long>v;
        for(int i=n-1;i>=0;i--){
            while(!st.empty() && arr[st.top()]>=arr[i]){st.pop();}
            if(st.empty()){
              v.push_back(n);
                
            }
            else v.push_back(st.top());
            st.push(i);
            
        }
        reverse(v.begin(),v.end());
        return v;
    }
    long long getMaxArea(long long arr[], int n)
    {
        vector<long long>a,b;
        a=small(arr,n);
        b=great(arr,n);
        long long ans=0;
        for(int i=0;i<n;i++){
            ans=max(ans,(arr[i]*(b[i]-a[i]-1)));
        }
       return ans;
    }
};
